<?xml version="1.0"?>
<!--
  Gazebo ROS force plugin demo

  If you want the force to be applied on the world frame, use
    <force_frame>world</force_frame>
  If you want the force to be applied on the link frame, use
    <force_frame>link</force_frame>

  Try for example:

  ros2 topic pub -1 /demo/world/force_demo geometry_msgs/Wrench "force: {x: 10.0}"

  and

  ros2 topic pub -1 /demo/link/force_demo geometry_msgs/Wrench "force: {x: 10.0}"
-->
<sdf version="1.6">
  <world name="default">
    <include>
      <uri>model://sun</uri>
    </include>


    <model name="submarine">
      <pose>0 0 2 0 0 0</pose>
      <link name="base_link">
        <volume>0.001</volume>
        <inertial>
          <mass>1</mass>
        </inertial>
        <visual name='body_visual'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
        <collision name='body_collision'>
          <geometry>
              <box>
                <size>0.1 0.1 0.1</size>
              </box>
          </geometry>
        </collision>
      </link>
      <link name="front_camera_link">
        <pose>0 0 0 0 0 0</pose>
        <volume> 0.001 </volume>
        <inertial>
          <mass>1</mass>
        </inertial>
        <visual name='camera_visual'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
        <collision name='camera_collision'>
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </collision>
        <sensor type="camera" name="front">
          <update_rate>60</update_rate>
          <visualize>true</visualize>
          <camera name="head">
            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.02</near>
              <far>300</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.007</stddev>
            </noise>
          </camera>
          <plugin name="gazebo_camera_controller" filename="libgazebo_ros_camera.so">
            <ros>
              <namespace>/tr/gazebo_drivers/camera</namespace>
              <!-- TODO(louise) Remapping not working due to https://github.com/ros-perception/image_common/issues/93 -->
              <remapping>image_raw:=image_demo</remapping>
              <remapping>camera_info:=camera_info_demo</remapping>
            </ros>
            <!-- camera_name>omit so it defaults to sensor name</camera_name-->
            <!-- frame_name>omit so it defaults to link name</frame_name -->
          </plugin>
        </sensor>
      </link>
      <joint name="front_camera_joint" type="fixed">
          <parent>base_link</parent>
          <child>front_camera_link</child>
      </joint>
      <plugin name="buoyancy" filename="libBuoyancyPlugin.so">
        <fluid_density>1000</fluid_density>
      </plugin>
      <plugin name="gazebo_force_controller" filename="libgazebo_ros_force.so">
        <ros>
          <namespace>/tr/gazebo_drivers/thrusters</namespace>
          <remapping>gazebo_ros_force:=force</remapping>
        </ros>
        <link_name>base_link</link_name>
        <force_frame>world</force_frame>
      </plugin>
    </model>


    <model name="ball">
        <pose>1.4 0.2 2.2 0 0 0</pose>
        <link name="link">
        <volume>0.000168884995</volume>
        <inertial>
          <mass>0.168884995</mass>
        </inertial>
        <collision name="ball_collision">
          <geometry>
            <sphere>
              <radius>0.03429</radius>
            </sphere>
          </geometry>
        </collision>
        <visual name="ball_visual">
          <geometry>
            <sphere>
              <radius>0.03429</radius>
            </sphere>
          </geometry>
        </visual>
      </link>
      <plugin name="buoyancy" filename="libBuoyancyPlugin.so">
        <fluid_density>1000</fluid_density>
      </plugin>
    </model>

    
  </world>
</sdf>